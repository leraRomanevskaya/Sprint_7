{"uid":"c237966a0b2ad23a","name":"Регистрация курьера с недостающим обязательным полем завершается ошибкой","fullName":"tests.test_create_courier.TestCreateCourier#test_missing_required_field_returns_error","historyId":"7d61b0a93acb8cabb5eae39f4907b909","time":{"start":1704987218992,"stop":1704987219194,"duration":202},"status":"failed","statusMessage":"AssertionError","statusTrace":"self = <tests.test_create_courier.TestCreateCourier object at 0x102160d60>, exclude_login = False, exclude_password = False\nexclude_first_name = True\n\n    @allure.title('Регистрация курьера с недостающим обязательным полем завершается ошибкой')\n    @pytest.mark.parametrize(\n        \"exclude_login,exclude_password,exclude_first_name\",\n        [\n            (True, False, False),\n            (False, True, False),\n            (False, False, True)\n        ]\n    )\n    def test_missing_required_field_returns_error(self, exclude_login, exclude_password, exclude_first_name):\n        payload = generate_courier_payload(\n            exclude_login=exclude_login,\n            exclude_password=exclude_password,\n            exclude_first_name=exclude_first_name\n        )\n        response = create_courier(payload)\n>       verify_response_code(response, 400)\n\ntests/test_create_courier.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [201]>, code = 400\n\n    @allure.step('Проверяем код ответа сервера')\n    def verify_response_code(response: requests.Response, code: int):\n>       assert response.status_code == code\nE       AssertionError\n\nmethods.py:88: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"self = <tests.test_create_courier.TestCreateCourier object at 0x102160d60>, exclude_login = False, exclude_password = False\nexclude_first_name = True\n\n    @allure.title('Регистрация курьера с недостающим обязательным полем завершается ошибкой')\n    @pytest.mark.parametrize(\n        \"exclude_login,exclude_password,exclude_first_name\",\n        [\n            (True, False, False),\n            (False, True, False),\n            (False, False, True)\n        ]\n    )\n    def test_missing_required_field_returns_error(self, exclude_login, exclude_password, exclude_first_name):\n        payload = generate_courier_payload(\n            exclude_login=exclude_login,\n            exclude_password=exclude_password,\n            exclude_first_name=exclude_first_name\n        )\n        response = create_courier(payload)\n>       verify_response_code(response, 400)\n\ntests/test_create_courier.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [201]>, code = 400\n\n    @allure.step('Проверяем код ответа сервера')\n    def verify_response_code(response: requests.Response, code: int):\n>       assert response.status_code == code\nE       AssertionError\n\nmethods.py:88: AssertionError","steps":[{"name":"Генерируем учётные данные курьера","time":{"start":1704987218992,"stop":1704987218992,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"exclude_login","value":"False"},{"name":"exclude_password","value":"False"},{"name":"exclude_first_name","value":"True"}],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"Создаём курьера [POST]","time":{"start":1704987218992,"stop":1704987219187,"duration":195},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"payload","value":"{'login': 'awrabewudt', 'password': 'rfblgjccot'}"}],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"Проверяем код ответа сервера","time":{"start":1704987219187,"stop":1704987219187,"duration":0},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"/Users/lkitova/arcadia/games/qa/qa_tests/venv/lib/python3.8/site-packages/allure_commons/_allure.py\", line 173, in impl\n    return func(*a, **kw)\n  File \"/Users/lkitova/Documents/Sprint_7/methods.py\", line 88, in verify_response_code\n    assert response.status_code == code\n","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [201]>"},{"name":"code","value":"400"}],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":3,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_create_courier"},{"name":"subSuite","value":"TestCreateCourier"},{"name":"host","value":"i111355119"},{"name":"thread","value":"60430-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_create_courier"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"exclude_first_name","value":"True"},{"name":"exclude_login","value":"False"},{"name":"exclude_password","value":"False"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"c237966a0b2ad23a.json","parameterValues":["True","False","False"]}