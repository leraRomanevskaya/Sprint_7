{"uid":"ec592831391eb95b","name":"Попытка залогина без логина или пароля завершается ошибкой","fullName":"tests.test_login_courier.TestLoginCourier#test_auth_without_one_credential_returns_error_status_code","historyId":"1bffe615961662305a8a9c8c9fc0a775","time":{"start":1704987239763,"stop":1704987299952,"duration":60189},"status":"failed","statusMessage":"AssertionError","statusTrace":"self = <tests.test_login_courier.TestLoginCourier object at 0x1021a7400>, exclude_login = False, exclude_password = True\n\n    @allure.title('Попытка залогина без логина или пароля завершается ошибкой')\n    @pytest.mark.parametrize(\n        \"exclude_login,exclude_password\",\n        [\n            (True, False),\n            (False, True)\n        ]\n    )\n    def test_auth_without_one_credential_returns_error_status_code(self, exclude_login, exclude_password):\n        credentials = get_registered_courier_credentials(exclude_login=exclude_login, exclude_password=exclude_password)\n        response = login_courier(credentials)\n>       verify_response_code(response, 400)\n\ntests/test_login_courier.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [504]>, code = 400\n\n    @allure.step('Проверяем код ответа сервера')\n    def verify_response_code(response: requests.Response, code: int):\n>       assert response.status_code == code\nE       AssertionError\n\nmethods.py:88: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"self = <tests.test_login_courier.TestLoginCourier object at 0x1021a7400>, exclude_login = False, exclude_password = True\n\n    @allure.title('Попытка залогина без логина или пароля завершается ошибкой')\n    @pytest.mark.parametrize(\n        \"exclude_login,exclude_password\",\n        [\n            (True, False),\n            (False, True)\n        ]\n    )\n    def test_auth_without_one_credential_returns_error_status_code(self, exclude_login, exclude_password):\n        credentials = get_registered_courier_credentials(exclude_login=exclude_login, exclude_password=exclude_password)\n        response = login_courier(credentials)\n>       verify_response_code(response, 400)\n\ntests/test_login_courier.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [504]>, code = 400\n\n    @allure.step('Проверяем код ответа сервера')\n    def verify_response_code(response: requests.Response, code: int):\n>       assert response.status_code == code\nE       AssertionError\n\nmethods.py:88: AssertionError","steps":[{"name":"Получаем пару логин-пароль существующего курьера","time":{"start":1704987239763,"stop":1704987239763,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"exclude_login","value":"False"},{"name":"exclude_password","value":"True"},{"name":"corrupt_password","value":"False"}],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"Залогин курьера [POST]","time":{"start":1704987239764,"stop":1704987299951,"duration":60187},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"credentials","value":"{'login': 'login-test-777'}"}],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"Проверяем код ответа сервера","time":{"start":1704987299951,"stop":1704987299951,"duration":0},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"/Users/lkitova/arcadia/games/qa/qa_tests/venv/lib/python3.8/site-packages/allure_commons/_allure.py\", line 173, in impl\n    return func(*a, **kw)\n  File \"/Users/lkitova/Documents/Sprint_7/methods.py\", line 88, in verify_response_code\n    assert response.status_code == code\n","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [504]>"},{"name":"code","value":"400"}],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":3,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login_courier"},{"name":"subSuite","value":"TestLoginCourier"},{"name":"host","value":"i111355119"},{"name":"thread","value":"60430-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login_courier"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"exclude_login","value":"False"},{"name":"exclude_password","value":"True"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"ec592831391eb95b.json","parameterValues":["False","True"]}